div(id="smart-button-container")
      div(style="text-align: center;")
        div(style="margin-bottom: 1.25rem;")
          p Выберите из списка
          select(id="item-options")
            option(value="1 session" price="50") 1 сессия - 50 USD
            option(value="8 sessions" price="380") 8 сессий - 380 USD
            option(value="12 sessisons " price="525") 12 сессий  - 525 USD
            option(value="16 sessions" price="651") 16 сессий - 651 USD
            option(value="24 sessions" price="885") 24 сессии - 885 USD
            option(value="Urgent session" price="100") Срочная сессия - 100 USD
          select(style="visibility: hidden" id="quantitySelect")
      div(id="paypal-button-container")

script(src="https://www.paypal.com/sdk/js?client-id=sb&enable-funding=venmo&currency=USD" data-sdk-integration-source="button-factory")
    
script.

    function initPayPalButton() {
        var shipping = 0
        var itemOptions = document.querySelector(
            '#smart-button-container #item-options'
        )
        var quantity = parseInt()
        var quantitySelect = document.querySelector(
            '#smart-button-container #quantitySelect'
        )
        if (!isNaN(quantity)) {
            quantitySelect.style.visibility = 'visible'
        }
        var orderDescription = 'Выберите из списка'
        if (orderDescription === '') {
            orderDescription = 'Item'
        }
        paypal
            .Buttons({
                style: {
                    shape: 'pill',
                    color: 'blue',
                    layout: 'vertical',
                    label: 'paypal',
                },
                createOrder: function (data, actions) {
                    var selectedItemDescription =
                        itemOptions.options[itemOptions.selectedIndex].value
                    var selectedItemPrice = parseFloat(
                        itemOptions.options[itemOptions.selectedIndex].getAttribute('price')
                    )
                    var tax =
                        0 === 0 || false ? 0 : selectedItemPrice * (parseFloat(0) / 100)
                    if (quantitySelect.options.length > 0) {
                        quantity = parseInt(
                            quantitySelect.options[quantitySelect.selectedIndex].value
                        )
                    } else {
                        quantity = 1
                    }

                    tax *= quantity
                    tax = Math.round(tax * 100) / 100
                    var priceTotal =
                        quantity * selectedItemPrice + parseFloat(shipping) + tax
                    priceTotal = Math.round(priceTotal * 100) / 100
                    var itemTotalValue =
                        Math.round(selectedItemPrice * quantity * 100) / 100

                    return actions.order.create({
                        purchase_units: [
                            {
                                description: orderDescription,
                                amount: {
                                    currency_code: 'USD',
                                    value: priceTotal,
                                    breakdown: {
                                        item_total: {
                                            currency_code: 'USD',
                                            value: itemTotalValue,
                                        },
                                        shipping: {
                                            currency_code: 'USD',
                                            value: shipping,
                                        },
                                        tax_total: {
                                            currency_code: 'USD',
                                            value: tax,
                                        },
                                    },
                                },
                                items: [
                                    {
                                        name: selectedItemDescription,
                                        unit_amount: {
                                            currency_code: 'USD',
                                            value: selectedItemPrice,
                                        },
                                        quantity: quantity,
                                    },
                                ],
                            },
                        ],
                    })
                },
                onApprove: function (data, actions) {
                    return actions.order.capture().then(function (orderData) {
                        // Full available details
                        console.log(
                            'Capture result',
                            orderData,
                            JSON.stringify(orderData, null, 2)
                        )

                        // Show a success message within this page, e.g.
                        const element = document.getElementById('paypal-button-container')
                        element.innerHTML = ''
                        element.innerHTML = '<h3>Благодарю за оплату</h3>'

                        // Or go to another URL:  actions.redirect('thank_you.html');
                    })
                },
                onError: function (err) {
                    console.log(err)
                },
            })
            .render('#paypal-button-container')
    }
    initPayPalButton()

